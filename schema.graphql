# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY {
  globalAuthRule: AuthRule = { allow: public }
} # FOR TESTING ONLY!
schema {
  query: Query
  mutation: Mutation
}

type Query {
  getMyTimeline(limit: Int!, nextToken: String): TweetsPage!

  getOwnProfile: OwnProfile!

  getProfile(userName: String!): Profile!

  getTweets(userId: ID!, limit: Int!, nextToken: String): TweetsPage!

  getLikes(userId: ID!, limit: Int!, nextToken: String): TweetsPage!

  getFollowers(userId: ID!, limit: Int!, nextToken: String): ListOfProfilesPage!

  getFollowing(userId: ID!, limit: Int!, nextToken: String): ListOfProfilesPage!

  getAviOrHeaderUploadURL(extension: String, contentType: String): AWSURL!
}

type Mutation {
  editMyProfile(newProfile: EditProfileInput!): OwnProfile!

  tweet(text: String!): Tweet!

  like(tweetId: ID!): Boolean!

  unLike(tweetId: ID!): Boolean!

  retweet(tweetId: ID!): Boolean!

  unRetweet(tweetId: ID!): Boolean!

  reply(tweetId: ID!, text: String!): Reply!

  follow(userId: ID!): Boolean!

  unFollow(userId: ID!): Boolean!
}

input EditProfileInput {
  name: String!
  avi: AWSURL
  header: AWSURL
  bio: String
  location: String
  birthdate: AWSDate
}

interface IProfile {
  id: ID!
  name: String!
  userName: String!
  avi: AWSURL
  header: AWSURL
  bio: String
  location: String
  birthdate: AWSDate
  created: AWSDateTime!
  followersCount: Int!
  followingCount: Int!
  tweetsCount: Int!
  likesCount: Int!
  tweets: TweetsPage!
}

type OwnProfile implements IProfile {
  id: ID!
  name: String!
  userName: String!
  avi: AWSURL
  header: AWSURL
  bio: String
  location: String
  birthdate: AWSDate
  created: AWSDateTime!
  followersCount: Int!
  followingCount: Int!
  tweetsCount: Int!
  likesCount: Int!
  tweets: TweetsPage!
}

type Profile implements IProfile {
  id: ID!
  name: String!
  userName: String!
  avi: AWSURL
  header: AWSURL
  bio: String
  location: String
  birthdate: AWSDate
  created: AWSDateTime!
  followersCount: Int!
  followingCount: Int!
  tweetsCount: Int!
  likesCount: Int!
  tweets: TweetsPage!
  following: Boolean!
  followedBy: Boolean!
}

interface ITweet {
  id: ID!
  profile: IProfile!
  createdAt: AWSDateTime!
}

type Tweet implements ITweet {
  id: ID!
  profile: IProfile!
  createdAt: AWSDateTime!
  text: String!
  likes: Int!
  replies: Int!
  liked: Boolean!
  retweeted: Boolean!
}

type Reply implements ITweet {
  id: ID!
  profile: IProfile!
  createdAt: AWSDateTime!
  text: String!
  likes: Int!
  replies: Int!
  liked: Boolean!
  retweeted: Boolean!
  inReplyToTweet: ITweet!
  inReplyToUsers: [IProfile!]
}

type Retweet implements ITweet {
  id: ID!
  profile: IProfile!
  createdAt: AWSDateTime!
  retweetOf: ITweet!
}

type TweetsPage {
  tweets: [ITweet!]
  nextToken: String
}

type ListOfProfilesPage {
  profiles: [IProfile!]
  nextToken: String
}
